#/usr/local/bin bash
#
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

# not likely to change
UPSTREAM=https://git-wip-us.apache.org/repos/asf/metron.git
BASE_BRANCH=master
CONFIG_FILE=~/.clone-upstream

# does a config file already exist?
if [ -f $CONFIG_FILE ]; then
  . $CONFIG_FILE
  echo "  ...using settings from $CONFIG_FILE"
fi

# github account of committer (you)
if [ -z "$GITHUB_NAME" ]; then
  read -p "  your github username [$GITHUB_NAME]: " INPUT
  [ -n "$INPUT" ] && GITHUB_NAME=$INPUT

  # write setting to config file
  echo "GITHUB_NAME=$GITHUB_NAME" >> $CONFIG_FILE
fi

# apache id of committer (you)
if [ -z "$APACHE_NAME" ]; then
  read -p "  your apache userid [$APACHE_NAME]: " INPUT
  [ -n "$INPUT" ] && APACHE_NAME=$INPUT

  # write setting to config file
  echo "APACHE_NAME=$APACHE_NAME" >> $CONFIG_FILE
fi

# apache email addr of committer (you)
if [ -z "$APACHE_EMAIL" ]; then
  APACHE_EMAIL=${APACHE_NAME}@apache.org
  read -p "  your apache email [$APACHE_EMAIL]: " INPUT
  [ -n "$INPUT" ] && APACHE_EMAIL=$INPUT

  # write setting to config file, so it is not needed next time
  echo "APACHE_EMAIL=$APACHE_EMAIL" >> $CONFIG_FILE
fi

# origin repository
ORIGIN="https://github.com/apache/metron"
read -p "  origin repo [$ORIGIN]: " INPUT
[ -n "$INPUT" ] && ORIGIN=$INPUT

# working directory
WORK=~/tmp/metron-upstream
read -p "  local working directory [$WORK]: " INPUT
[ -n "$INPUT" ] && WORK=$INPUT

# handle tilde expansion
WORK="${WORK/#\~/$HOME}"

# warn the user if the working directory exists
if [ -d "$WORK" ]; then
  echo "$WORK exists, please start clean"
  exit 1
fi

# if working directory does not exist, checkout the base branch
if [ ! -d "$WORK" ]; then

  # clone the repository and fetch updates
  mkdir -p $WORK
  git clone $ORIGIN $WORK
  cd $WORK

  # setup the git user and email for your apache account
  git config user.name "$APACHE_NAME"
  git config user.email $APACHE_EMAIL

  # fetch any changes from upstream
  git remote add upstream $UPSTREAM
  git fetch upstream $BASE_BRANCH
  git fetch upstream

  # merge any changes from upstream
  git checkout $BASE_BRANCH
  git merge upstream/$BASE_BRANCH
fi

cd $WORK
echo ""

